version: "3.9"
services:
  datagen:
    image: "datagen:latest"
    build:
      context: ../modules/datagen
    environment:
      KAFKA_TOPIC_NAME: "event_customer_entity"
      KAFKA_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8081"
      CORE_BANKING_DB_HOST: "postgresql-core-banking"
      CORE_BANKING_DB_PORT: "5432"
      CORE_BANKING_DB_USER: "user"
      CORE_BANKING_DB_PASSWORD: "password"
      CORE_BANKING_DB_NAME: "core-banking"
      CONTACT_CENTER_DB_URI: "mongodb://mongodb-contact-center:27017"
      CONTACT_CENTER_DB_USER: "user"
      CONTACT_CENTER_DB_PASSWORD: "password"
      CONTACT_CENTER_DB_NAME: "contact-center"
    volumes:
      - "../schemas/customer-key.avsc:/schemas/customer-key.avsc"
      - "../schemas/customer-value.avsc:/schemas/customer-value.avsc"
      - "./wait-for-it.sh:/wait-for-it.sh"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - >
        /wait-for-it.sh schema-registry:8081 -s -t 120 --
        /wait-for-it.sh broker:9092 -s -t 60 --
        /go/bin/app -key-schema-file=/schemas/customer-key.avsc -value-schema-file=/schemas/customer-value.avsc
    #command:
    #  - "-key-schema-file=/schemas/customer-key.avsc"
    #  - "-value-schema-file=/schemas/customer-value.avsc"
    depends_on:
      - mongodb-contact-center
      - postgresql-core-banking
      - broker

  postgresql-core-banking:
    image: "debezium/postgres:14"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "core-banking"
    volumes:
      - "../schemas/core-banking.ddl:/docker-entrypoint-initdb.d/core-banking.sql"
    #command
    #  - "postgres"
    #  - "-c"
    #  - "wal_level=logical"
    # https://hub.docker.com/r/debezium/postgres
    # https://stackoverflow.com/questions/59416301/how-to-change-postgres-docker-image-wal-level-on-setup

  # https://github.com/bitnami/bitnami-docker-mongodb#setting-up-replication
  mongodb-contact-center:
    image: "bitnami/mongodb:4.4.10-debian-10-r44"
    ports:
      - "27017:27017"
    environment:
      MONGODB_ROOT_USER: "admin"
      MONGODB_ROOT_PASSWORD: "admin"
      MONGODB_USERNAME: "user"
      MONGODB_PASSWORD: "password"
      MONGODB_DATABASE: "contact-center"
      MONGODB_SYSTEM_LOG_VERBOSITY: "1"
      MONGODB_ADVERTISED_HOSTNAME: "mongodb-contact-center"
      #MONGODB_REPLICA_SET_NAME: "contact-center"
      MONGODB_REPLICA_SET_MODE: "primary"
      MONGODB_REPLICA_SET_KEY: "contactCenterRs1"

  mongodb-customer-single-view:
    image: "bitnami/mongodb:4.4.10-debian-10-r44"
    ports:
      - "27018:27017"
    environment:
      MONGODB_ROOT_USER: "admin"
      MONGODB_ROOT_PASSWORD: "admin"
      MONGODB_USERNAME: "user"
      MONGODB_PASSWORD: "password"
      MONGODB_DATABASE: "customer-single-view"

  service:
    image: "service:latest"
    ports:
      - "8080:8080"
    build:
      context: ../modules/service
    environment:
      PORT: "8080"
      CUSTOMER_DB_URI: "mongodb://mongodb-customer-single-view:27017"
      CUSTOMER_DB_NAME: "customer-single-view"
      CUSTOMER_DB_USER: "user"
      CUSTOMER_DB_PASSWORD: "password"
    depends_on:
      - mongodb-customer-single-view
        

  account-bookings-kafka-streams:
    image: "account-bookings-kafka-streams:latest"
    #image: "account-bookings-kafka-streams:latest-native"
    build:
      context: ../modules/account-bookings-kafka-streams
      #context: ../modules/account-bookings-kafka-streams/Dockerfile.native
    environment:
      KAFKA_BROKERS: broker:29092
      APPLICATION_ID: account-bookings-kafka-streams
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_TOPIC_ACCOUNTS: event_core_banking_accounts
      KAFKA_TOPIC_BOOKINGS: event_core_banking_bookings
      KAFKA_TOPIC_ACCOUNT_BOOKINGS: event_core_banking_account_bookings
      KAFKA_TOPIC_ACCOUNT_BOOKINGS_PARTITIONS: 1
      KAFKA_TOPIC_ACCOUNT_BOOKINGS_REPLICAS: 1
    volumes:
      - "./wait-for-it.sh:/wait-for-it.sh"
    depends_on:
      - broker
      - schema-registry
      - connect
      - control-center
    entrypoint:
      - "/bin/sh"
      - "-c"
      - >
        /wait-for-it.sh ksqldb-server:8088 -s -t 120 --
        /wait-for-it.sh schema-registry:8081 -s -t 60 --
        /wait-for-it.sh connect:8083 -s -t 120 --
        java org.springframework.boot.loader.JarLauncher